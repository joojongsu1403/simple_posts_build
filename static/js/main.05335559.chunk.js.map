{"version":3,"sources":["actions/index.js","components/posts_index.js","components/posts_new.js","components/posts_show.js","components/App.js","reducers/reducer_posts.js","reducers/index.js","index.js"],"names":["ROOT_URL","API_KEY","Posts_index","this","props","fetchPosts","posts","map","post","className","key","id","to","categories","title","style","width","margin","renderPost","PureComponent","connect","state","all","type","payload","axios","get","PostsNew","onSubmit","createPost","then","history","push","handleChange","event","setState","target","name","value","renderInputField","input","label","placeholder","tagName","stateName","change","meta","touched","error","invalid","onChange","tag","content","handleSubmit","Field","component","marginLeft","reduxForm","form","validate","values","errors","withRouter","PostsShow","onEditClick","preventDefault","editPost","match","params","isEdit","onDeleteClick","deletePost","onToggleChange","fetchPost","edit","marginBottom","show","view","onClick","marginRight","marginTop","delete","patch","App","path","exact","PostsIndex","INITIAL_STATE","rootReducer","combineReducers","action","data","formReducer","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","StrictMode","store","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.05335559.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const CREATE_POST = 'CREATE_POST';\r\nexport const FETCH_POST = 'FETCH_POST';\r\nexport const EDIT_POST = 'EDIT_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\n\r\nconst ROOT_URL = 'https://reduxblog.herokuapp.com/api';\r\nconst API_KEY = '?key=zxcvasdfqwerzxcvasdfqwer';\r\n\r\nexport function fetchPosts() {\r\n    const request = axios.get(`${ROOT_URL}/posts${API_KEY}`);\r\n\r\n    return {\r\n        type: FETCH_POSTS,\r\n        payload: request\r\n    };\r\n};\r\n\r\nexport function createPost(props) {\r\n    const request = axios.post(`${ROOT_URL}/posts${API_KEY}`, props);\r\n\r\n    return {\r\n        type: CREATE_POST,\r\n        payload: request\r\n    };\r\n};\r\n\r\nexport function fetchPost(id) {\r\n    const request = axios.get(`${ROOT_URL}/posts/${id}${API_KEY}`);\r\n\r\n    return {\r\n        type: FETCH_POST,\r\n        payload: request\r\n    };\r\n};\r\n\r\nexport function editPost(id, props) {\r\n    const request = axios.patch(`${ROOT_URL}/posts/${id}${API_KEY}`, props);\r\n\r\n    return {\r\n        type: EDIT_POST,\r\n        payload: request\r\n    }\r\n};\r\n\r\nexport function deletePost(id){\r\n    const request = axios.delete(`${ROOT_URL}/posts/${id}${API_KEY}`);\r\n\r\n    return {\r\n        type: DELETE_POST,\r\n        payload: request\r\n    };\r\n};","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts } from '../actions/index';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Posts_index extends PureComponent {\r\n    \r\n    componentDidMount() {\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    renderPost() {\r\n        return this.props.posts.map( post => {\r\n            return (\r\n                <li className=\"list-group-item\" key={post.id}>\r\n                    <Link to={`posts/${post.id}`}>\r\n                        <span className=\"pull-xs-right\">{post.categories}</span>\r\n                        <strong>{post.title}</strong>\r\n                    </Link>\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width:\"80%\", margin: '0 auto'}}>\r\n                <div className=\"text-xs-right\">\r\n                    <Link to=\"/posts/new\" className=\"btn btn-primary\">Add a Post</Link>\r\n                </div>\r\n                <h3>Posts</h3>\r\n                <ul className=\"list-group\">\r\n                    {this.renderPost()}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { posts: state.posts.all };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Posts_index);","import React, { PureComponent } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport { createPost } from '../actions/index';\r\n\r\nclass PostsNew extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            categories: '',\r\n            content: ''\r\n        };\r\n    };\r\n\r\n    onSubmit = props => {\r\n        this.props.createPost(props)\r\n        .then(() => {\r\n           this.props.history.push(\"/\");\r\n        });\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    renderInputField = ({\r\n        input,\r\n        type,\r\n        label,\r\n        placeholder,\r\n        tagName,\r\n        stateName,\r\n        change,\r\n        className,\r\n        meta: { touched, error, invalid }\r\n    }) => {\r\n\r\n        const tag = ( tagName ) => {\r\n            if ( tagName === 'input' ) {\r\n                return <input \r\n                            {...input} \r\n                            className={className} \r\n                            type={type}\r\n                            value={stateName}\r\n                            placeholder={placeholder}\r\n                            onChange={change} />\r\n            } else if ( tagName === 'textarea' ) {\r\n                return <textarea \r\n                            {...input}\r\n                            className={className} \r\n                            value={stateName}\r\n                            onChange={change} />\r\n            };\r\n        };\r\n\r\n        return (\r\n            <div className={`form-group ${touched && invalid ? 'has-danger' : \"\"}`}>\r\n                <label>{label}</label>\r\n                {tag(tagName)}\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit(this.onSubmit)} style={{width:\"80%\", margin: '0 auto'}}>\r\n                <h3>Create A New Post</h3>\r\n\r\n                <Field\r\n                    name=\"title\"\r\n                    label=\"title\"\r\n                    component={this.renderInputField}\r\n                    placeholder=\"title\"\r\n                    tagName=\"input\"\r\n                    type=\"text\"\r\n                    stateName={this.state.title}\r\n                    className=\"form-control\"\r\n                    change={this.handleChange} />\r\n                    \r\n                <Field\r\n                    name=\"categories\"\r\n                    label=\"categories\"\r\n                    component={this.renderInputField}\r\n                    placeholder=\"categories\"\r\n                    tagName=\"input\"\r\n                    type=\"text\"\r\n                    stateName={this.state.categories}\r\n                    className=\"form-control\"\r\n                    change={this.handleChange} />\r\n\r\n                <Field\r\n                    name=\"content\"\r\n                    label=\"content\"\r\n                    component={this.renderInputField}\r\n                    placeholder=\"content\"\r\n                    tagName=\"textarea\"\r\n                    type=\"text\"\r\n                    stateName={this.state.content}\r\n                    className=\"form-control\"\r\n                    change={this.handleChange} />\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                <Link to=\"/\" className=\"btn btn-danger\" style={{marginLeft: '5px'}}>Cancel</Link>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n\r\n    if (!values.title) {\r\n        errors.title = 'Enter a username';\r\n    };\r\n\r\n    if (!values.categories) {\r\n        errors.categories = 'Enter categories';\r\n    };\r\n\r\n    if (!values.content) {\r\n        errors.content = 'Enter some content';\r\n    };\r\n\r\n    return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'PostsNewForm',\r\n    validate\r\n})(withRouter(connect(null, { createPost })(PostsNew)));","import React, { PureComponent } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { fetchPost, deletePost, editPost } from '../actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PostsShow extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            title: '',\r\n            categories: '',\r\n            content: '',\r\n            isEdit: false\r\n        };\r\n    };\r\n    \r\n    componentDidMount(){\r\n        this.props.fetchPost(this.props.match.params.id);\r\n    };\r\n\r\n    // componentDidUpdate(){\r\n    //     if(String(this.props.match.params.id) === String(this.props.post.id)) {\r\n    //         this.setState({\r\n    //             title: this.props.post.title,\r\n    //             categories: this.props.post.categories,\r\n    //             content: this.props.post.content\r\n    //         });\r\n    //     };\r\n    // };\r\n\r\n    onEditClick = (event) => { // 서버에 patch에 관한 내용은 없나보다... 404 뜸..\r\n        event.preventDefault();\r\n        this.props.editPost(this.props.match.params.id, this.state);\r\n        this.setState({\r\n            isEdit: !this.state.isEdit\r\n        });\r\n    };\r\n\r\n    onDeleteClick = () => {\r\n        this.props.deletePost(this.props.match.params.id)\r\n        .then(()=> {\r\n            this.props.history.push(\"/\");\r\n        });\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    onToggleChange = () => {\r\n        this.setState({\r\n            isEdit: !this.state.isEdit,\r\n            title: this.props.post.title,\r\n            categories: this.props.post.categories,\r\n            content: this.props.post.content\r\n        });\r\n    };\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        const { post } = this.props;\r\n\r\n        if (!post) {\r\n            return <div>Loading...</div>\r\n        };\r\n\r\n        const edit = (\r\n            <form className=\"form-group\" onSubmit={this.onEditClick}>\r\n                <div style={{marginBottom: \"10px\"}} >\r\n                    <input \r\n                        className=\"form-control\"\r\n                        name=\"title\" \r\n                        value={this.state.title}\r\n                        onChange={this.handleChange} />\r\n                </div>\r\n                \r\n                <div style={{marginBottom: \"10px\"}}>\r\n                    <input \r\n                        className=\"form-control\" \r\n                        style={{marginBottom: \"10px\"}} \r\n                        name=\"categories\" \r\n                        value={this.state.categories}\r\n                        onChange={this.handleChange} />\r\n                </div>\r\n                   \r\n                <div style={{marginBottom: \"10px\"}}>\r\n                    <textarea \r\n                        className=\"form-control\" \r\n                        style={{marginBottom: \"10px\"}} \r\n                        name=\"content\" \r\n                        value={this.state.content}\r\n                        onChange={this.handleChange} />\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary\">Edit Post</button>\r\n            </form>\r\n        );\r\n\r\n        const show = (\r\n            <>\r\n                <h3 style={{marginBottom: \"30px\"}}>{post.title}</h3>\r\n                <h6 style={{marginBottom: \"30px\"}}>{post.categories}</h6>\r\n                <p style={{marginBottom: \"30px\"}}>{post.content}</p>\r\n            </>\r\n        );\r\n        \r\n        const view = this.state.isEdit ? edit : show;\r\n\r\n        return (\r\n            <div style={{width:\"80%\", margin: '0 auto'}}>\r\n                <Link to=\"/\" className=\"btn btn-primary\">Back to Index</Link>\r\n                <button onClick={this.onDeleteClick} className=\"btn btn-danger pull-xs-right\">\r\n                    Delete Post\r\n                </button>\r\n                <button onClick={this.onToggleChange} className=\"btn btn-primary pull-xs-right\" style={{ marginRight: '5px' }}>\r\n                    {this.state.isEdit ? \"Cancel\" : \"Edit Post\"}\r\n                </button>\r\n                <div style={{marginTop: '50px'}}>{view}</div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return { post: state.posts.post };\r\n};\r\n\r\nexport default withRouter(\r\n    connect( \r\n        mapStateToProps, \r\n        { fetchPost, deletePost, editPost }\r\n    )(PostsShow)\r\n);","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport PostsIndex from './posts_index';\nimport PostsNew from './posts_new';\nimport PostsShow from './posts_show';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={PostsIndex} />\n        <Route path=\"/posts/new\" component={PostsNew} />\n        <Route path=\"/posts/:id\" component={PostsShow} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { FETCH_POSTS, FETCH_POST } from '../actions/index';\r\n\r\nconst INITIAL_STATE = { all:[], post:null };\r\n\r\nexport default function ( state = INITIAL_STATE, action ) {\r\n    switch(action.type){\r\n        case FETCH_POSTS:\r\n            return {...state, all: action.payload.data};\r\n        case FETCH_POST:\r\n            return {...state, post: action.payload.data};\r\n        default:\r\n            return state;\r\n    };\r\n};","import { combineReducers } from 'redux';\r\nimport PostsReducer from './reducer_posts';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst rootReducer = combineReducers({\r\n    posts: PostsReducer,\r\n    form: formReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport  promise  from 'redux-promise';\nimport reducers from './reducers/index';\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStoreWithMiddleware(reducers)}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}